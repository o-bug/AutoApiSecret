name: Auto Api Secret

on:
  schedule:
    - cron: '3 */3 * * *'
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Cache Token
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/refresh_token.txt
          key: refresh_token
      - name: Refresh Api
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
        run: |
          pwd
          ls -la
          python refresh.py
          ls -la
      - name: Git Commit
        run: |
          git config --global user.email m@xon.one
          git config --global user.name o-bug
          git checkout -B refresh_token master
          git add refresh_token.txt
          git commit -m "update new refresh_token"
      - name: GitHub Push
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: refresh_token
          force: true
      - name: Upload Token
        uses: actions/upload-artifact@v3
        with:
          name: refresh_token
          path: ${{ github.workspace }}/refresh_token.txt
